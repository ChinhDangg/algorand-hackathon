{
    "name": "VotingApp",
    "structs": {},
    "methods": [
        {
            "name": "create",
            "args": [
                {
                    "type": "account",
                    "name": "admin"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "add_member",
            "args": [
                {
                    "type": "account",
                    "name": "acct"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "remove_member",
            "args": [
                {
                    "type": "account",
                    "name": "acct"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "is_member",
            "args": [
                {
                    "type": "account",
                    "name": "acct"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "create_proposal",
            "args": [
                {
                    "type": "string",
                    "name": "description"
                },
                {
                    "type": "uint64",
                    "name": "end_round"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_proposal_details",
            "args": [
                {
                    "type": "uint64",
                    "name": "pid"
                }
            ],
            "returns": {
                "type": "(string,uint64,uint64,uint64)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "vote",
            "args": [
                {
                    "type": "uint64",
                    "name": "pid"
                },
                {
                    "type": "uint64",
                    "name": "choice"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "finalize",
            "args": [
                {
                    "type": "uint64",
                    "name": "pid"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "record_accept",
            "args": [
                {
                    "type": "uint64",
                    "name": "pid"
                },
                {
                    "type": "account",
                    "name": "candidate"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 2,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "admin": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "YWRtaW4="
                },
                "next_pid": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bmV4dF9waWQ="
                },
                "member_count": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bWVtYmVyX2NvdW50"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "members": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": "bWVtYmVy"
                },
                "proposals": {
                    "keyType": "uint64",
                    "valueType": "string",
                    "prefix": "cHJvcA=="
                },
                "yes_votes": {
                    "keyType": "uint64",
                    "valueType": "uint64",
                    "prefix": "eWVz"
                },
                "no_votes": {
                    "keyType": "uint64",
                    "valueType": "uint64",
                    "prefix": "bm8="
                },
                "status": {
                    "keyType": "uint64",
                    "valueType": "uint64",
                    "prefix": "c3RhdA=="
                },
                "end_round": {
                    "keyType": "uint64",
                    "valueType": "uint64",
                    "prefix": "ZW5k"
                },
                "required_n": {
                    "keyType": "uint64",
                    "valueType": "uint64",
                    "prefix": "cmVxbg=="
                },
                "voted_n": {
                    "keyType": "uint64",
                    "valueType": "uint64",
                    "prefix": "dm90ZWRu"
                },
                "vote_receipt": {
                    "keyType": "(uint64,address)",
                    "valueType": "uint64",
                    "prefix": "cmNwdA=="
                },
                "accepted": {
                    "keyType": "uint64",
                    "valueType": "address",
                    "prefix": "YWNj"
                }
            }
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        719
                    ],
                    "errorMessage": "Already voted"
                },
                {
                    "pc": [
                        665
                    ],
                    "errorMessage": "Not a member"
                },
                {
                    "pc": [
                        691,
                        814
                    ],
                    "errorMessage": "Not active"
                },
                {
                    "pc": [
                        166,
                        188,
                        204,
                        224,
                        268,
                        293,
                        316,
                        334,
                        352
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        507
                    ],
                    "errorMessage": "Only admin"
                },
                {
                    "pc": [
                        393
                    ],
                    "errorMessage": "Only admin can add"
                },
                {
                    "pc": [
                        911
                    ],
                    "errorMessage": "Only admin can record"
                },
                {
                    "pc": [
                        437
                    ],
                    "errorMessage": "Only admin can remove"
                },
                {
                    "pc": [
                        600
                    ],
                    "errorMessage": "Proposal not found"
                },
                {
                    "pc": [
                        934
                    ],
                    "errorMessage": "Proposal not passed"
                },
                {
                    "pc": [
                        857
                    ],
                    "errorMessage": "Too early"
                },
                {
                    "pc": [
                        706
                    ],
                    "errorMessage": "Voting window closed"
                },
                {
                    "pc": [
                        356
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        169,
                        191,
                        207,
                        227,
                        271,
                        296,
                        319,
                        337
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        391,
                        435,
                        505,
                        909
                    ],
                    "errorMessage": "check self.admin exists"
                },
                {
                    "pc": [
                        701,
                        840
                    ],
                    "errorMessage": "check self.end_round entry exists"
                },
                {
                    "pc": [
                        420,
                        466,
                        473,
                        571,
                        975
                    ],
                    "errorMessage": "check self.member_count exists"
                },
                {
                    "pc": [
                        512
                    ],
                    "errorMessage": "check self.next_pid exists"
                },
                {
                    "pc": [
                        771,
                        875
                    ],
                    "errorMessage": "check self.no_votes entry exists"
                },
                {
                    "pc": [
                        824
                    ],
                    "errorMessage": "check self.required_n entry exists"
                },
                {
                    "pc": [
                        737,
                        832
                    ],
                    "errorMessage": "check self.voted_n entry exists"
                },
                {
                    "pc": [
                        757,
                        867
                    ],
                    "errorMessage": "check self.yes_votes entry exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAQACJg0MbWVtYmVyX2NvdW50BWFkbWluBm1lbWJlcgRzdGF0A3llcwJubwQVH3x1CG5leHRfcGlkA2VuZAZ2b3RlZG4EcHJvcARyZXFuBHJjcHQxG0EARoIJBIVKUY0EzNkPEwSY1joeBP+j3VUE1AGRnQQL4fPSBKJ4qLYETpGbFQQJoz//NhoAjgkAvACqAJgAgQBoADwAKAAYAAIjQzEZFEQxGEQ2GgEXNhoCF8AciALLIkMxGRREMRhENhoBF4gCSyJDMRkURDEYRDYaARc2GgIXiAGlIkMxGRREMRhENhoBF4gBYU8CFk8CFk8CFoACABpPA1BPAlBMUExQJwZMULAiQzEZFEQxGEQ2GgE2GgIXiADXFicGTFCwIkMxGRREMRhENhoBF8AciACuJwZMULAiQzEZFEQxGEQ2GgEXwByIAGIiQzEZFEQxGEQ2GgEXwByIACQiQzEZFEQxGBRENhoBF8AciAACIkOKAQApi/9nJwciZygjZ4mKAQAxACMpZUQSRCqL/1BJvkwXTEEABYsBQAAPIhaLAEy/IyhlRCIIKExniYoBADEAIyllRBJEKov/UEm+TBdMQQAdiwEiEkEAFiMWiwBMvyMoZURBAAkjKGVEIgkoTGeJigEBKov/UL5MFyNMTwJNFomKAgExACMpZUQSRCMnB2VESSIIJwdMZ0kWJwpLAVBJvEiL/r8nBEsBUCMWTEsBvycFSwJQSwG/K0sCUCIWvycISwJQi/8WvyMoZUQnC0sDUEwWvycJTwJQTL+JigEEi/8WJwpLAVC+RCcESwJQvkwXI0xPAk0nBUsDUL5MFyNMTwJNK08EUL5MFyNMTwJNiYoCACOAACoxAFC+TBdMQQB9iwIiEkEAdiJEi/4WSYwAK0xQvkwXjAFBAF+LASISQQBYIkQnCIsASU4CUL5EFzIGD0RJMQBQJwxMUL5FARRESTEAUCcMTFAiFr8nCUxQSb5EFyIIFr+L/yISQQAOJwSLAFBJvkQXIggWv4knBYsAUEm+RBciCBa/iSNC/6UjQv+HigEAgACL/xZJK0xQSb5MF0xBAFiLAyISQQBRIkQnC4sBSU4CUL5EFycJSwJQvkQXJwhPA1C+RBeMABJAAAgyBosAD0EAIiJEJwSLAUlOAlC+RBcnBU8CUL5EFw2BAyRPAk0WiwJMv4kjQv/bI0L/rIoCACOAADEAIyllRBJEi/4WSStMUL5MF0xBADiLAyQSQQAxIkSAA2FjY4sCUIv/vyqL/1BJjAC+TBeMAUEABYsBQAAPIhaLAEy/IyhlRCIIKExniSNC/8w=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}